name: snap
on:
  push:
    tags:
      - '*'
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  main-snap:
    uses: ubuntu-robotics/snap_workflows/.github/workflows/build-install-test-snap-lxc.yaml@F_add_lxc_template
    with:
      lxc-image: ubuntu:18.04
      snapcraft-channel: 7.x
      branch-name: master
      snap-name: ros2-talker-listener
      snap-install-args: --devmode
      test-script: |
                    #!/bin/bash

                    ## Install ROS
                    sudo apt update && sudo apt install curl gnupg2 lsb-release
                    sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
                    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
                    sudo apt update
                    sudo apt install -y ros-dashing-ros-base

                    source /opt/ros/dashing/setup.bash

                    check_node() {
                        local node_name=$1
                        ros2 node list | grep -q "/$node_name"
                        if [ $? -eq 0 ]; then
                            echo "$node_name is running."
                        else
                            echo "Error - $node_name is not running."
                            exit 1
                        fi
                    }

                    check_topic() {
                        local topic_name=$1
                        local pub_count=$(ros2 topic info /$topic_name | grep "Publisher count:" | awk '{print $3}')
                        local sub_count=$(ros2 topic info /$topic_name | grep "Subscriber count:" | awk '{print $3}')
                        if [ "$pub_count" -gt 0 ] && [ "$sub_count" -gt 0 ]; then
                            echo "$topic_name has publishers and subscribers."
                        else
                            echo "Error - $topic_name has no publishers or subscribers."
                            exit 1
                        fi
                    }

                    ros2-talker-listener &
                    pid=$!

                    sleep 5

                    check_node talker
                    check_node listener
                    check_topic chatter
                    kill $pid

                    echo "All checks passed successfully."
